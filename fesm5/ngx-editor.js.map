{"version":3,"file":"ngx-editor.js.map","sources":["ng://ngx-editor/app/ngx-editor/common/utils/ngx-editor.utils.ts","ng://ngx-editor/app/ngx-editor/common/services/command-executor.service.ts","ng://ngx-editor/app/ngx-editor/common/services/message.service.ts","ng://ngx-editor/app/ngx-editor/common/ngx-editor.defaults.ts","ng://ngx-editor/app/ngx-editor/ngx-editor.component.ts","ng://ngx-editor/app/ngx-editor/ngx-grippie/ngx-grippie.component.ts","ng://ngx-editor/app/ngx-editor/ngx-editor-message/ngx-editor-message.component.ts","ng://ngx-editor/app/ngx-editor/ngx-editor-toolbar/ngx-editor-toolbar.component.ts","ng://ngx-editor/app/ngx-editor/ngx-editor.module.ts"],"sourcesContent":["/**\n * enable or disable toolbar based on configuration\n *\n * @param value toolbar item\n * @param toolbar toolbar configuration object\n */\nexport function canEnableToolbarOptions(value: string, toolbar: any): boolean {\n\n    if (value) {\n\n        if (toolbar['length'] === 0) {\n            return true;\n        } else {\n\n            const found = toolbar.filter(array => {\n                return array.indexOf(value) !== -1;\n            });\n\n            return found.length ? true : false;\n        }\n    } else {\n        return false;\n    }\n}\n\n/**\n * set editor configuration\n *\n * @param value configuration via [config] property\n * @param ngxEditorConfig default editor configuration\n * @param input direct configuration inputs via directives\n */\nexport function getEditorConfiguration(value: any, ngxEditorConfig: any, input: any): any {\n\n    for (const i in ngxEditorConfig) {\n        if (i) {\n\n            if (input[i] !== undefined) {\n                value[i] = input[i];\n            }\n\n            if (!value.hasOwnProperty(i)) {\n                value[i] = ngxEditorConfig[i];\n            }\n        }\n    }\n\n    return value;\n}\n\n/**\n * return vertical if the element is the resizer property is set to basic\n *\n * @param resizer type of resizer, either basic or stack\n */\nexport function canResize(resizer: string): any {\n    if (resizer === 'basic') {\n        return 'vertical';\n    }\n    return false;\n}\n\n/**\n * save selection when the editor is focussed out\n */\nexport function saveSelection(): any {\n    if (window.getSelection) {\n        const sel = window.getSelection();\n        if (sel.getRangeAt && sel.rangeCount) {\n            return sel.getRangeAt(0);\n        }\n    } else if (document.getSelection && document.createRange) {\n        return document.createRange();\n    }\n    return null;\n}\n\n/**\n * restore selection when the editor is focussed in\n *\n * @param range saved selection when the editor is focussed out\n */\nexport function restoreSelection(range): boolean {\n    if (range) {\n        if (window.getSelection) {\n            const sel = window.getSelection();\n            sel.removeAllRanges();\n            sel.addRange(range);\n            return true;\n        } else if (document.getSelection && range.select) {\n            range.select();\n            return true;\n        }\n    } else {\n        return false;\n    }\n}\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpRequest, HttpHeaders} from '@angular/common/http';\nimport * as Utils from '../utils/ngx-editor.utils';\n\n@Injectable()\nexport class CommandExecutorService {\n\n  /** saves the selection from the editor when focussed out */\n  savedSelection: any = undefined;\n\n  /**\n   *\n   * @param _http HTTP Client for making http requests\n   */\n  constructor(private _http: HttpClient) {\n  }\n\n  /**\n   * executes command from the toolbar\n   *\n   * @param command command to be executed\n   */\n  execute(command: string): void {\n\n    if (!this.savedSelection && command !== 'enableObjectResizing') {\n      throw new Error('Range out of Editor');\n    }\n\n    if (command === 'enableObjectResizing') {\n      document.execCommand('enableObjectResizing', true, 'true');\n      return;\n    }\n\n    if (command === 'blockquote') {\n      document.execCommand('formatBlock', false, 'blockquote');\n      return;\n    }\n\n    if (command === 'removeBlockquote') {\n      document.execCommand('formatBlock', false, 'div');\n      return;\n    }\n\n    document.execCommand(command, false, null);\n    return;\n  }\n\n  /**\n   * inserts image in the editor\n   *\n   * @param imageURI url of the image to be inserted\n   */\n  insertImage(imageURI: string): void {\n    if (this.savedSelection) {\n      if (imageURI) {\n        const restored = Utils.restoreSelection(this.savedSelection);\n        if (restored) {\n          const inserted = document.execCommand('insertImage', false, imageURI);\n          if (!inserted) {\n            throw new Error('Invalid URL');\n          }\n        }\n      }\n    } else {\n      throw new Error('Range out of the editor');\n    }\n    return;\n  }\n\n  /**\n   * inserts image in the editor\n   *\n   * @param videParams url of the image to be inserted\n   */\n  insertVideo(videParams: any): void {\n    if (this.savedSelection) {\n      if (videParams) {\n        const restored = Utils.restoreSelection(this.savedSelection);\n        if (restored) {\n          if (this.isYoutubeLink(videParams.videoUrl)) {\n            const youtubeURL = '<iframe width=\"' + videParams.width + '\" height=\"' + videParams.height + '\"'\n              + 'src=\"' + videParams.videoUrl + '\"></iframe>';\n            this.insertHtml(youtubeURL);\n          } else if (this.checkTagSupportInBrowser('video')) {\n\n            if (this.isValidURL(videParams.videoUrl)) {\n              const videoSrc = '<video width=\"' + videParams.width + '\" height=\"' + videParams.height + '\"'\n                + ' controls=\"true\"><source src=\"' + videParams.videoUrl + '\"></video>';\n              this.insertHtml(videoSrc);\n            } else {\n              throw new Error('Invalid video URL');\n            }\n\n          } else {\n            throw new Error('Unable to insert video');\n          }\n        }\n      }\n    } else {\n      throw new Error('Range out of the editor');\n    }\n    return;\n  }\n\n  /**\n   * checks the input url is a valid youtube URL or not\n   *\n   * @param url Youtue URL\n   */\n  private isYoutubeLink(url: string): boolean {\n    const ytRegExp = /^(http(s)?:\\/\\/)?((w){3}.)?youtu(be|.be)?(\\.com)?\\/.+/;\n    return ytRegExp.test(url);\n  }\n\n  /**\n   * check whether the string is a valid url or not\n   * @param url url\n   */\n  private isValidURL(url: string) {\n    const urlRegExp = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\n    return urlRegExp.test(url);\n  }\n\n  /**\n   * uploads image to the server\n   *\n   * @param file file that has to be uploaded\n   * @param endPoint enpoint to which the image has to be uploaded\n   */\n  uploadImage(file: File, endPoint: string, headers?: any): any {\n\n    if (!endPoint) {\n      throw new Error('Image Endpoint isn`t provided or invalid');\n    }\n\n    const formData: FormData = new FormData();\n\n    if (file) {\n\n      formData.append('file', file);\n\n      let requestHeader = new HttpHeaders();\n      const headerKeys = Object.keys(headers);\n      for (const headerKey of headerKeys) {\n        requestHeader = requestHeader.set(headerKey, headers[headerKey]);\n      }\n      const req = new HttpRequest('POST', endPoint, formData, {\n        reportProgress: true,\n        headers: requestHeader\n      });\n\n      return this._http.request(req);\n\n    } else {\n      throw new Error('Invalid Image');\n    }\n  }\n\n  /**\n   * inserts link in the editor\n   *\n   * @param params parameters that holds the information for the link\n   */\n  createLink(params: any): void {\n\n    if (this.savedSelection) {\n      /**\n       * check whether the saved selection contains a range or plain selection\n       */\n      if (params.urlNewTab) {\n        const newUrl = '<a href=\"' + params.urlLink + '\" target=\"_blank\">' + params.urlText + '</a>';\n\n        if (document.getSelection().type !== 'Range') {\n          const restored = Utils.restoreSelection(this.savedSelection);\n          if (restored) {\n            this.insertHtml(newUrl);\n          }\n        } else {\n          throw new Error('Only new links can be inserted. You cannot edit URL`s');\n        }\n      } else {\n        const restored = Utils.restoreSelection(this.savedSelection);\n        if (restored) {\n          document.execCommand('createLink', false, params.urlLink);\n        }\n      }\n    } else {\n      throw new Error('Range out of the editor');\n    }\n\n    return;\n  }\n\n  /**\n   * insert color either font or background\n   *\n   * @param color color to be inserted\n   * @param where where the color has to be inserted either text/background\n   */\n  insertColor(color: string, where: string): void {\n\n    if (this.savedSelection) {\n      const restored = Utils.restoreSelection(this.savedSelection);\n      if (restored && this.checkSelection()) {\n        if (where === 'textColor') {\n          document.execCommand('foreColor', false, color);\n        } else {\n          document.execCommand('hiliteColor', false, color);\n        }\n      }\n\n    } else {\n      throw new Error('Range out of the editor');\n    }\n\n    return;\n  }\n\n  /**\n   * set font size for text\n   *\n   * @param fontSize font-size to be set\n   */\n  setFontSize(fontSize: string): void {\n\n    if (this.savedSelection && this.checkSelection()) {\n      const deletedValue = this.deleteAndGetElement();\n\n      if (deletedValue) {\n\n        const restored = Utils.restoreSelection(this.savedSelection);\n\n        if (restored) {\n          if (this.isNumeric(fontSize)) {\n            const fontPx = '<span style=\"font-size: ' + fontSize + 'px;\">' + deletedValue + '</span>';\n            this.insertHtml(fontPx);\n          } else {\n            const fontPx = '<span style=\"font-size: ' + fontSize + ';\">' + deletedValue + '</span>';\n            this.insertHtml(fontPx);\n          }\n        }\n      }\n\n    } else {\n      throw new Error('Range out of the editor');\n    }\n  }\n\n  /**\n   * set font name/family for text\n   *\n   * @param fontName font-family to be set\n   */\n  setFontName(fontName: string): void {\n\n    if (this.savedSelection && this.checkSelection()) {\n      const deletedValue = this.deleteAndGetElement();\n\n      if (deletedValue) {\n\n        const restored = Utils.restoreSelection(this.savedSelection);\n\n        if (restored) {\n          if (this.isNumeric(fontName)) {\n            const fontFamily = '<span style=\"font-family: ' + fontName + 'px;\">' + deletedValue + '</span>';\n            this.insertHtml(fontFamily);\n          } else {\n            const fontFamily = '<span style=\"font-family: ' + fontName + ';\">' + deletedValue + '</span>';\n            this.insertHtml(fontFamily);\n          }\n        }\n      }\n\n    } else {\n      throw new Error('Range out of the editor');\n    }\n  }\n\n  /** insert HTML */\n  private insertHtml(html: string): void {\n\n    const isHTMLInserted = document.execCommand('insertHTML', false, html);\n\n    if (!isHTMLInserted) {\n      throw new Error('Unable to perform the operation');\n    }\n\n    return;\n  }\n\n  /**\n   * check whether the value is a number or string\n   * if number return true\n   * else return false\n   */\n  private isNumeric(value: any): boolean {\n    return /^-{0,1}\\d+$/.test(value);\n  }\n\n  /** delete the text at selected range and return the value */\n  private deleteAndGetElement(): any {\n\n    let slectedText;\n\n    if (this.savedSelection) {\n      slectedText = this.savedSelection.toString();\n      this.savedSelection.deleteContents();\n      return slectedText;\n    }\n\n    return false;\n\n  }\n\n  /** check any slection is made or not */\n  private checkSelection(): any {\n\n    const slectedText = this.savedSelection.toString();\n\n    if (slectedText.length === 0) {\n      throw new Error('No Selection Made');\n    }\n\n    return true;\n  }\n\n  /**\n   * check tag is supported by browser or not\n   *\n   * @param tag HTML tag\n   */\n  private checkTagSupportInBrowser(tag: string): boolean {\n    return !(document.createElement(tag) instanceof HTMLUnknownElement);\n  }\n\n}\n","import {Injectable} from '@angular/core';\n\nimport {Observable} from 'rxjs';\nimport {Subject} from 'rxjs';\n\n/** time in which the message has to be cleared */\nconst DURATION = 7000;\n\n@Injectable()\nexport class MessageService {\n\n  /** variable to hold the user message */\n  private message: Subject<string> = new Subject();\n\n  constructor() {\n  }\n\n  /** returns the message sent by the editor */\n  getMessage(): Observable<string> {\n    return this.message.asObservable();\n  }\n\n  /**\n   * sends message to the editor\n   *\n   * @param message message to be sent\n   */\n  sendMessage(message: string): void {\n    this.message.next(message);\n    this.clearMessageIn(DURATION);\n    return;\n  }\n\n  /**\n   * a short interval to clear message\n   *\n   * @param milliseconds time in seconds in which the message has to be cleared\n   */\n  private clearMessageIn(milliseconds: number): void {\n    setTimeout(() => {\n      this.message.next(undefined);\n    }, milliseconds);\n    return;\n  }\n\n}\n","/**\n * toolbar default configuration\n */\nexport const ngxEditorConfig = {\n  editable: true,\n  spellcheck: true,\n  height: 'auto',\n  minHeight: '0',\n  width: 'auto',\n  minWidth: '0',\n  translate: 'yes',\n  enableToolbar: true,\n  showToolbar: true,\n  placeholder: 'Enter text here...',\n  imageEndPoint: '',\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strikeThrough', 'superscript', 'subscript'],\n    ['fontName', 'fontSize', 'color'],\n    ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull', 'indent', 'outdent'],\n    ['cut', 'copy', 'delete', 'removeFormat', 'undo', 'redo'],\n    ['paragraph', 'blockquote', 'removeBlockquote', 'horizontalLine', 'orderedList', 'unorderedList'],\n    ['link', 'unlink', 'image', 'video'],\n    ['code']\n  ],\n  headers: {},\n  responseEndPoint: null,\n  appendImageEndPointToResponse: true\n};\n\n/**\n * codemirror configuaration\n */\nexport const codeMirrorConfig = {\n  lineNumbers: true,\n  gutter: true,\n  lineWrapping: true,\n  mode: 'htmlmixed',\n  autofocus: true,\n  htmlMode: true\n};\n","import {\n  Component, OnInit, Input, Output, ViewChild,\n  EventEmitter, Renderer2, forwardRef\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport * as CodeMirror from 'codemirror';\nimport 'codemirror/addon/display/placeholder.js';\nimport 'codemirror/mode/htmlmixed/htmlmixed.js';\n\nimport {CommandExecutorService} from './common/services/command-executor.service';\nimport {MessageService} from './common/services/message.service';\n\nimport {ngxEditorConfig, codeMirrorConfig} from './common/ngx-editor.defaults';\nimport * as Utils from './common/utils/ngx-editor.utils';\n\n@Component({\n  selector: 'app-ngx-editor',\n  templateUrl: './ngx-editor.component.html',\n  styleUrls: ['./ngx-editor.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxEditorComponent),\n      multi: true\n    }\n  ]\n})\n\nexport class NgxEditorComponent implements OnInit, ControlValueAccessor {\n\n  /** Specifies weather the textarea to be editable or not */\n  @Input() editable: boolean;\n  /** The spellcheck property specifies whether the element is to have its spelling and grammar checked or not. */\n  @Input() spellcheck: boolean;\n  /** Placeholder for the textArea */\n  @Input() placeholder: string;\n  /**\n   * The translate property specifies whether the content of an element should be translated or not.\n   *\n   * Check https://www.w3schools.com/tags/att_global_translate.asp for more information and browser support\n   */\n  @Input() translate: string;\n  /** Sets height of the editor */\n  @Input() height: string;\n  /** Sets minimum height for the editor */\n  @Input() minHeight: string;\n  /** Sets Width of the editor */\n  @Input() width: string;\n  /** Sets minimum width of the editor */\n  @Input() minWidth: string;\n  /**\n   * Toolbar accepts an array which specifies the options to be enabled for the toolbar\n   *\n   * Check ngxEditorConfig for toolbar configuration\n   *\n   * Passing an empty array will enable all toolbar\n   */\n  @Input() toolbar: Object;\n  /**\n   * The editor can be resized vertically.\n   *\n   * `basic` resizer enables the html5 reszier. Check here https://www.w3schools.com/cssref/css3_pr_resize.asp\n   *\n   * `stack` resizer enable a resizer that looks like as if in https://stackoverflow.com\n   */\n  @Input() resizer = 'stack';\n  /**\n   * The config property is a JSON object\n   *\n   * All avaibale inputs inputs can be provided in the configuration as JSON\n   * inputs provided directly are considered as top priority\n   */\n  @Input() config = ngxEditorConfig;\n  /** Weather to show or hide toolbar */\n  @Input() showToolbar: boolean;\n  /** Weather to enable or disable the toolbar */\n  @Input() enableToolbar: boolean;\n  /** Endpoint for which the image to be uploaded */\n  @Input() imageEndPoint: string;\n\n  /** emits `blur` event when focused out from the textarea */\n  @Output() blur: EventEmitter<string> = new EventEmitter<string>();\n  /** emits `focus` event when focused in to the textarea */\n  @Output() focus: EventEmitter<string> = new EventEmitter<string>();\n\n  @ViewChild('ngxTextArea') textArea: any;\n  @ViewChild('ngxCodeEditor') codeEditor: any;\n  @ViewChild('ngxWrapper') ngxWrapper: any;\n\n  Utils: any = Utils;\n  codeEditorMode = false;\n\n  private ngxCodeMirror: any = undefined;\n  private onChange: (value: string) => void;\n  private onTouched: () => void;\n\n  /**\n   * @param _messageService service to send message to the editor message component\n   * @param _commandExecutor executes command from the toolbar\n   * @param _renderer access and manipulate the dom element\n   */\n  constructor(\n    private _messageService: MessageService,\n    private _commandExecutor: CommandExecutorService,\n    private _renderer: Renderer2) {\n  }\n\n  /**\n   * events\n   */\n  onTextAreaFocus(): void {\n    this.focus.emit('focus');\n    return;\n  }\n\n  /** focus the text area when the editor is focussed */\n  onEditorFocus() {\n    this.textArea.nativeElement.focus();\n  }\n\n  /**\n   * Executed from the contenteditable section while the input property changes\n   * @param html html string from contenteditable\n   */\n  onContentChange(html: string): void {\n\n    if (typeof this.onChange === 'function') {\n      this.onChange(html);\n      this.togglePlaceholder(html);\n    }\n\n    return;\n  }\n\n  onTextAreaBlur(): void {\n\n    /** save selection if focussed out */\n    this._commandExecutor.savedSelection = Utils.saveSelection();\n\n    if (typeof this.onTouched === 'function') {\n      this.onTouched();\n    }\n    this.blur.emit('blur');\n    return;\n  }\n\n  /**\n   * resizing text area\n   *\n   * @param offsetY vertical height of the eidtable portion of the editor\n   */\n  resizeTextArea(offsetY: number): void {\n    let newHeight = parseInt(this.height, 10);\n    newHeight += offsetY;\n    this.height = newHeight + 'px';\n    this.textArea.nativeElement.style.height = this.height;\n\n    /**\n     * update code-editor height only on editor mode\n     */\n    if (this.codeEditorMode) {\n      this.ngxCodeMirror.setSize('100%', this.height);\n    }\n    return;\n  }\n\n  /**\n   * editor actions, i.e., executes command from toolbar\n   *\n   * @param commandName name of the command to be executed\n   */\n  executeCommand(commandName: string): void {\n\n    if (commandName === 'code') {\n      this.toggleCodeEditor();\n      return;\n    }\n\n    try {\n      this._commandExecutor.execute(commandName);\n    } catch (error) {\n      this._messageService.sendMessage(error.message);\n    }\n\n    return;\n  }\n\n  /**\n   * Write a new value to the element.\n   *\n   * @param value value to be executed when there is a change in contenteditable\n   */\n  writeValue(value: any): void {\n\n    this.togglePlaceholder(value);\n\n    if (value === null || value === undefined || value === '' || value === '<br>') {\n      value = null;\n    }\n\n    this.refreshView(value);\n  }\n\n  /**\n   * Set the function to be called\n   * when the control receives a change event.\n   *\n   * @param fn a function\n   */\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Set the function to be called\n   * when the control receives a touch event.\n   *\n   * @param fn a function\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * refresh view/HTML of the editor\n   *\n   * @param value html string from the editor\n   */\n  refreshView(value: string): void {\n    const normalizedValue = value === null ? '' : value;\n    this._renderer.setProperty(this.textArea.nativeElement, 'innerHTML', normalizedValue);\n    return;\n  }\n\n  /**\n   * toggle between codeview and editor\n   */\n  toggleCodeEditor(): void {\n    this.codeEditorMode = !this.codeEditorMode;\n\n    if (this.codeEditorMode) {\n\n      this.ngxCodeMirror = CodeMirror.fromTextArea(this.codeEditor.nativeElement, codeMirrorConfig);\n\n      /** set value of the code editor */\n      this.ngxCodeMirror.setValue(this.textArea.nativeElement.innerHTML);\n\n      /** sets height of the code editor as same as the height of the textArea */\n      this.ngxCodeMirror.setSize('100%', this.height);\n\n    } else {\n\n      /** remove/ destroy code editor */\n      this.ngxCodeMirror.toTextArea();\n\n      /** update the model value and html content on the contenteditable */\n      this.refreshView(this.ngxCodeMirror.getValue());\n      this.onContentChange(this.ngxCodeMirror.getValue());\n\n    }\n    return;\n  }\n\n  /**\n   * toggles placeholder based on input string\n   *\n   * @param value A HTML string from the editor\n   */\n  togglePlaceholder(value: any): void {\n    if (!value || value === '<br>' || value === '') {\n      this._renderer.addClass(this.ngxWrapper.nativeElement, 'show-placeholder');\n    } else {\n      this._renderer.removeClass(this.ngxWrapper.nativeElement, 'show-placeholder');\n    }\n    return;\n  }\n\n  /**\n   * returns a json containing input params\n   */\n  getCollectiveParams(): any {\n    return {\n      editable: this.editable,\n      spellcheck: this.spellcheck,\n      placeholder: this.placeholder,\n      translate: this.translate,\n      height: this.height,\n      minHeight: this.minHeight,\n      width: this.width,\n      minWidth: this.minWidth,\n      enableToolbar: this.enableToolbar,\n      showToolbar: this.showToolbar,\n      imageEndPoint: this.imageEndPoint,\n      toolbar: this.toolbar\n    };\n  }\n\n  ngOnInit() {\n    /**\n     * set configuartion\n     */\n    this.config = this.Utils.getEditorConfiguration(this.config, ngxEditorConfig, this.getCollectiveParams());\n\n    this.height = this.height || this.textArea.nativeElement.offsetHeight;\n\n    this.executeCommand('enableObjectResizing');\n\n  }\n\n}\n","import { Component, HostListener } from '@angular/core';\nimport { NgxEditorComponent } from '../ngx-editor.component';\n\n@Component({\n  selector: 'app-ngx-grippie',\n  templateUrl: './ngx-grippie.component.html',\n  styleUrls: ['./ngx-grippie.component.scss']\n})\n\nexport class NgxGrippieComponent {\n\n  /** height of the editor */\n  height: number;\n  /** previous value befor resizing the editor */\n  oldY = 0;\n  /** set to true on mousedown event */\n  grabber = false;\n\n  /**\n   * Constructor\n   *\n   * @param _editorComponent Editor component\n   */\n  constructor(private _editorComponent: NgxEditorComponent) { }\n\n  /**\n   *\n   * @param event Mouseevent\n   *\n   * Update the height of the editor when the grabber is dragged\n   */\n  @HostListener('document:mousemove', ['$event']) onMouseMove(event: MouseEvent) {\n\n    if (!this.grabber) {\n      return;\n    }\n\n    this._editorComponent.resizeTextArea(event.clientY - this.oldY);\n    this.oldY = event.clientY;\n  }\n\n  /**\n   *\n   * @param event Mouseevent\n   *\n   * set the grabber to false on mouse up action\n   */\n  @HostListener('document:mouseup', ['$event']) onMouseUp(event: MouseEvent) {\n    this.grabber = false;\n  }\n\n  @HostListener('mousedown', ['$event']) onResize(event: MouseEvent, resizer?: Function) {\n    this.grabber = true;\n    this.oldY = event.clientY;\n    event.preventDefault();\n  }\n\n}\n","import { Component } from '@angular/core';\n\nimport { MessageService } from '../common/services/message.service';\n\n@Component({\n  selector: 'app-ngx-editor-message',\n  templateUrl: './ngx-editor-message.component.html',\n  styleUrls: ['./ngx-editor-message.component.scss']\n})\n\nexport class NgxEditorMessageComponent {\n\n  /** property that holds the message to be displayed on the editor */\n  ngxMessage = undefined;\n\n  /**\n   * @param _messageService service to send message to the editor\n   */\n  constructor(private _messageService: MessageService) {\n    this._messageService.getMessage().subscribe((message: string) => this.ngxMessage = message);\n  }\n\n  /**\n   * clears editor message\n   */\n  clearMessage(): void {\n    this.ngxMessage = undefined;\n    return;\n  }\n}\n","import {Component, Input, Output, EventEmitter, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {HttpResponse} from '@angular/common/http';\nimport {PopoverConfig} from 'ngx-bootstrap';\nimport {CommandExecutorService} from '../common/services/command-executor.service';\nimport {MessageService} from '../common/services/message.service';\nimport * as Utils from '../common/utils/ngx-editor.utils';\n\n@Component({\n  selector: 'app-ngx-editor-toolbar',\n  templateUrl: './ngx-editor-toolbar.component.html',\n  styleUrls: ['./ngx-editor-toolbar.component.scss'],\n  providers: [PopoverConfig]\n})\n\nexport class NgxEditorToolbarComponent implements OnInit {\n\n  /** holds values of the insert link form */\n  urlForm: FormGroup;\n  /** holds values of the insert image form */\n  imageForm: FormGroup;\n  /** holds values of the insert video form */\n  videoForm: FormGroup;\n  /** set to false when image is being uploaded */\n  uploadComplete = true;\n  /** upload percentage */\n  updloadPercentage = 0;\n  /** set to true when the image is being uploaded */\n  isUploading = false;\n  /** which tab to active for color insetion */\n  selectedColorTab = 'textColor';\n  /** font family name */\n  fontName = '';\n  /** font size */\n  fontSize = '';\n  /** hex color code */\n  hexColor = '';\n  /** show/hide image uploader */\n  isImageUploader = false;\n\n  /**\n   * Editor configuration\n   */\n  @Input() config: any;\n  @ViewChild('urlPopover') urlPopover;\n  @ViewChild('imagePopover') imagePopover;\n  @ViewChild('videoPopover') videoPopover;\n  @ViewChild('fontSizePopover') fontSizePopover;\n  @ViewChild('colorPopover') colorPopover;\n  /**\n   * Emits an event when a toolbar button is clicked\n   */\n  @Output() execute: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private _popOverConfig: PopoverConfig,\n              private _formBuilder: FormBuilder,\n              private _messageService: MessageService,\n              private _commandExecutorService: CommandExecutorService) {\n    this._popOverConfig.outsideClick = true;\n    this._popOverConfig.placement = 'bottom';\n    this._popOverConfig.container = 'body';\n  }\n\n  /**\n   * enable or diable toolbar based on configuration\n   *\n   * @param value name of the toolbar buttons\n   */\n  canEnableToolbarOptions(value): boolean {\n    return Utils.canEnableToolbarOptions(value, this.config['toolbar']);\n  }\n\n  /**\n   * triggers command from the toolbar to be executed and emits an event\n   *\n   * @param command name of the command to be executed\n   */\n  triggerCommand(command: string): void {\n    this.execute.emit(command);\n  }\n\n  /**\n   * create URL insert form\n   */\n  buildUrlForm(): void {\n\n    this.urlForm = this._formBuilder.group({\n      urlLink: ['', [Validators.required]],\n      urlText: ['', [Validators.required]],\n      urlNewTab: [true]\n    });\n\n    return;\n  }\n\n  /**\n   * inserts link in the editor\n   */\n  insertLink(): void {\n\n    try {\n      this._commandExecutorService.createLink(this.urlForm.value);\n    } catch (error) {\n      this._messageService.sendMessage(error.message);\n    }\n\n    /** reset form to default */\n    this.buildUrlForm();\n    /** close inset URL pop up */\n    this.urlPopover.hide();\n\n    return;\n  }\n\n  /**\n   * create insert image form\n   */\n  buildImageForm(): void {\n\n    this.imageForm = this._formBuilder.group({\n      imageUrl: ['', [Validators.required]]\n    });\n\n    return;\n  }\n\n  /**\n   * create insert image form\n   */\n  buildVideoForm(): void {\n\n    this.videoForm = this._formBuilder.group({\n      videoUrl: ['', [Validators.required]],\n      height: [''],\n      width: ['']\n    });\n\n    return;\n  }\n\n  /**\n   * Executed when file is selected\n   *\n   * @param e onChange event\n   */\n  onFileChange(e): void {\n\n    this.uploadComplete = false;\n    this.isUploading = true;\n\n    if (e.target.files.length > 0) {\n      const file = e.target.files[0];\n\n      try {\n        this._commandExecutorService.uploadImage(file, this.config.imageEndPoint, this.config.headers).subscribe(event => {\n\n          if (event.type) {\n            this.updloadPercentage = Math.round(100 * event.loaded / event.total);\n          }\n\n          if (event instanceof HttpResponse) {\n            try {\n              if (this.config.responseEndPoint) {\n                this._commandExecutorService.insertImage(this.config.responseEndPoint + event.body.url);\n              } else {\n                this._commandExecutorService.insertImage(event.body.url);\n              }\n            } catch (error) {\n              this._messageService.sendMessage(error.message);\n            }\n            this.uploadComplete = true;\n            this.isUploading = false;\n          }\n        });\n      } catch (error) {\n        this._messageService.sendMessage(error.message);\n        this.uploadComplete = true;\n        this.isUploading = false;\n      }\n\n    }\n\n    return;\n  }\n\n  /** insert image in the editor */\n  insertImage(): void {\n    try {\n      this._commandExecutorService.insertImage(this.imageForm.value.imageUrl);\n    } catch (error) {\n      this._messageService.sendMessage(error.message);\n    }\n\n    /** reset form to default */\n    this.buildImageForm();\n    /** close inset URL pop up */\n    this.imagePopover.hide();\n\n    return;\n  }\n\n  /** insert image in the editor */\n  insertVideo(): void {\n    try {\n      this._commandExecutorService.insertVideo(this.videoForm.value);\n    } catch (error) {\n      this._messageService.sendMessage(error.message);\n    }\n\n    /** reset form to default */\n    this.buildVideoForm();\n    /** close inset URL pop up */\n    this.videoPopover.hide();\n\n    return;\n  }\n\n  /** inser text/background color */\n  insertColor(color: string, where: string): void {\n\n    try {\n      this._commandExecutorService.insertColor(color, where);\n    } catch (error) {\n      this._messageService.sendMessage(error.message);\n    }\n\n    this.colorPopover.hide();\n    return;\n  }\n\n  /** set font size */\n  setFontSize(fontSize: string): void {\n\n    try {\n      this._commandExecutorService.setFontSize(fontSize);\n    } catch (error) {\n      this._messageService.sendMessage(error.message);\n    }\n\n    this.fontSizePopover.hide();\n    return;\n  }\n\n  /** set font Name/family */\n  setFontName(fontName: string): void {\n\n    try {\n      this._commandExecutorService.setFontName(fontName);\n    } catch (error) {\n      this._messageService.sendMessage(error.message);\n    }\n\n    this.fontSizePopover.hide();\n    return;\n  }\n\n  /**\n   * allow only numbers\n   *\n   * @param event keypress event\n   */\n  onlyNumbers(event: KeyboardEvent): boolean {\n    return event.charCode >= 48 && event.charCode <= 57;\n  }\n\n  ngOnInit() {\n    this.buildUrlForm();\n    this.buildImageForm();\n    this.buildVideoForm();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PopoverModule } from 'ngx-bootstrap';\nimport { NgxEditorComponent } from './ngx-editor.component';\nimport { NgxGrippieComponent } from './ngx-grippie/ngx-grippie.component';\nimport { NgxEditorMessageComponent } from './ngx-editor-message/ngx-editor-message.component';\nimport { NgxEditorToolbarComponent } from './ngx-editor-toolbar/ngx-editor-toolbar.component';\nimport { MessageService } from './common/services/message.service';\nimport { CommandExecutorService } from './common/services/command-executor.service';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, PopoverModule.forRoot()],\n  declarations: [NgxEditorComponent, NgxGrippieComponent, NgxEditorMessageComponent, NgxEditorToolbarComponent],\n  exports: [NgxEditorComponent, PopoverModule],\n  providers: [CommandExecutorService, MessageService]\n})\n\nexport class NgxEditorModule { }\n"],"names":["Utils.restoreSelection","tslib_1.__values","Utils.saveSelection","CodeMirror.fromTextArea","Utils.canEnableToolbarOptions"],"mappings":"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"}
